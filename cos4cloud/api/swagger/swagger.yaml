swagger: "2.0"
info:
  version: "0.0.1"
  title: Cos4Bio API
  description: All the biodiversity observations in one place
# during dev, should point to your local machine
host: https://europe-west2-cos4cloud-2d9d3.cloudfunctions.net
# basePath prefixes all resource paths 
basePath: /api
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /observations:
    x-swagger-router-controller: observations
    get:
      tags:
        - Observations
      description: Returns 'Observations' from different portals
      operationId: observations
      parameters:
        - name: page
          in: query
          description: The page number
          required: false
          type: number
        - name: per_page
          in: query
          description: The page number (Don't use this)
          required: false
          type: number
        - name: taxon_name
          in: query
          description: The name of the specie to filter
          required: false
          type: string
        - name: origin
          in: query
          description: portal code
          required: false
          collectionFormat: csv
          type: array
          items:
            type: string
            enum: [natusfera, ispot, plantnet, artportalen]
        - name: iconic_taxa
          in: query
          description: The name of the root specie to filter
          required: false
          collectionFormat: csv
          type: array
          items:
            type: string
            enum: [Plantae, Animalia, Reptilia, Fungi]
        - name: swlat
          in: query
          description: The swlat of bbox
          required: false
          type: number
        - name: swlng
          in: query
          description: The swlng of bbox
          required: false
          type: number
        - name: nelat
          in: query
          description: The nelat of bbox
          required: false
          type: number
        - name: nelng
          in: query
          description: The nelng of bbox
          required: false
          type: number
        - name: has
          in: query
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
            enum: [id_please, geo, photos]
        - name: quality_grade
          in: query
          required: false
          type: array
          maxLength: 2
          collectionFormat: csv
          items:
            type: string
            enum: [research, casual]
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /observation/{id}:
    x-swagger-router-controller: observation
    get:
      tags:
        - Observations
      description: Return observation detail
      operationId: observation
      parameters:
        - name: id
          in: path
          description: The id of the observation
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /images:
    # binds a127 app logic to a route
    x-swagger-router-controller: observations
    get:
      tags:
        - iSpot
      description: Returns 'Images' from iSpot (ðŸš¨it's only required for iSpot)
      operationId: getImages
      parameters:
        - name: ids
          in: query
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /userInfo:
    # binds a127 app logic to a route
    x-swagger-router-controller: userInfo
    get:
      tags:
        - Auth
      description: Returns user info status from authenix
      operationId: userInfo
      parameters:
        - name: access_token
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UserInfoResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  UserInfoResponse:
    required:
      - valid
    properties:
      valid:
        type: boolean
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
