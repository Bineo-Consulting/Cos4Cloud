swagger: "2.0"
info:
  version: "0.0.1"
  title: Cos4Bio API
  description: All the biodiversity observations in one place
# during dev, should point to your local machine
host: europe-west2-cos4cloud-2d9d3.cloudfunctions.net
# basePath prefixes all resource paths 
basePath: /api/dwc
schemes:
  # tip: remove http to make production-grade
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /observations:
    x-swagger-router-controller: observations
    get:
      tags:
        - Observations
      description: Returns 'Observations' from different portals
      operationId: observations
      parameters:
        - name: page
          in: query
          description: The page number
          required: false
          type: number
        - name: per_page
          in: query
          description: The page number (Don't use this)
          required: false
          type: number
        - name: taxon_name
          in: query
          description: The name of the specie to filter
          required: false
          type: string
        - name: ownerInstitutionCodeProperty
          in: query
          description: portal code
          required: false
          collectionFormat: csv
          type: array
          items:
            type: string
            enum: [natusfera, ispot, plantnet, artportalen]
        - name: scientificName
          in: query
          description: The name of the root specie to filter
          required: false
          collectionFormat: csv
          type: array
          items:
            type: string
            enum: [Plantae, Animalia, Reptilia, Fungi]
        - name: swlat
          in: query
          description: The swlat of bbox
          required: false
          type: number
        - name: swlng
          in: query
          description: The swlng of bbox
          required: false
          type: number
        - name: nelat
          in: query
          description: The nelat of bbox
          required: false
          type: number
        - name: nelng
          in: query
          description: The nelng of bbox
          required: false
          type: number
        - name: has
          in: query
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
            enum: [id_please, geo, photos]
        - name: identificationVerificationStatus
          in: query
          required: false
          type: array
          maxLength: 2
          collectionFormat: csv
          items:
            type: string
            enum: [research, casual]
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Observation'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /observation/{id}:
    x-swagger-router-controller: observation
    get:
      tags:
        - Observations
      description: Return observation detail
      operationId: observation
      parameters:
        - name: id
          in: path
          description: The id of the observation
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Observation"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /images:
    # binds a127 app logic to a route
    x-swagger-router-controller: observations
    get:
      tags:
        - iSpot
      description: Returns 'Images' from iSpot (ðŸš¨it's only required for iSpot)
      operationId: getImages
      parameters:
        - name: ids
          in: query
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /userInfo:
    # binds a127 app logic to a route
    x-swagger-router-controller: userInfo
    get:
      tags:
        - Auth
      description: Returns user info status from authenix
      operationId: userInfo
      parameters:
        - name: access_token
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UserInfoResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /comments:
    x-swagger-router-controller: comments
    get:
      tags:
        - Observations
      description: Send Comment/Identification
      operationId: addComment
      parameters:
        - name: user_id
          in: query
          description: The user_id from Authenix
          required: true
          type: string
        - name: observation_id
          in: query
          description: The id of the observation (with the origin)
          required: true
          type: string
        - name: taxon
          in: query
          description: The taxon guess of the specie
          required: true
          type: string
        - name: token
          in: query
          description: The access_token from authenix
          required: false
          type: string
        - name: body
          in: query
          description: The text/remarks of the comment
          required: false
          type: string
        - name: comment
          in: query
          description: The text/remarks of the comment
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Comment"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  Observation:
    required:
      - id
    properties:
      id:
        type: string
      eventDate:
        type: string
      created_at:
        type: string
      observedOn:
        type: string
      scientificName:
        type: string
      ownerInstitutionCodeProperty:
        type: string
        enum: [natusfera, ispot, plantnet, artportalen]
      origin:
        type: string
        enum: [natusfera, ispot, plantnet, artportalen]
      kingdom:
        type: string
        enum: [Plantae, Animalia, Reptilia, Fungi]
      identificationVerificationStatus:
        type: string
        enum: [reasearch, casual]
      basisOfRecord:
        type: string
        enum: [PreservedSpecimen, FossilSpecimen, LivingSpecimen, MaterialSample, Event, HumanObservation, MachineObservation, Taxon, Occurrence]
      type:
        type: string
      accessRight:
        type: string
      license:
        type: string
      rightsHolder:
        type: string
      description:
        type: string
      occurrenceStatus:
        type: string
      taxon:
        $ref: '#/definitions/Taxon'
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
      identifications:
        type: array
        items:
          $ref: '#/definitions/Identification'
      media:
        type: array
        items:
          $ref: '#/definitions/Media'
      decimalLatitude:
        type: number
      decimalLongitude:
        type: number
  Comment:
    required:
      - id
    properties:
      id:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      observation_id:
        type: number
      origin:
        type: string
        enum: [natusfera, ispot, plantnet, artportalen]
      user_id:
        type: string
      comment:
        type: string
      user:
        $ref: '#/definitions/User'
  Identification:
    required:
      - id
    properties:
      id:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      observation_id:
        type: number
      origin:
        type: string
        enum: [natusfera, ispot, plantnet, artportalen]
      taxon_id:
        type: number
      user_id:
        type: string
      comment:
        type: string
      user:
        $ref: '#/definitions/User'
      taxon:
        $ref: '#/definitions/Taxon'
  Media:
    properties:
      type:
        type: string
      format:
        type: string
      license:
        type: string
      rightsHolder:
        type: string
      identifier:
        type: string
      medium_url:
        type: string
      large_url:
        type: string
  User:
    required:
      - login
    properties:
      login:
        type: string
  Taxon:
    required:
      - id
    properties:
      id:
        type: string
      ancestry:
        type: string
      rank:
        type: string
      rank_level:
        type: number
      kingdom:
        type: string
        enum: [Plantae, Animalia, Reptilia, Fungi]
      phylum:
        type: string
      class:
        type: string
      order:
        type: string
      family:
        type: string
      genus:
        type: string
      name:
        type: string
      url:
        type: string
      common_name:
        type: string
      createdAt:
        type: string
  UserInfoResponse:
    required:
      - valid
    properties:
      valid:
        type: boolean
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
